{"ts":1351617508490,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# 1 \"packet.c\"\n# 1 \"<built-in>\"\n# 1 \"<command-line>\"\n# 1 \"packet.c\"\n\n\n# 1 \"/usr/include/errno.h\" 1 3 4\n# 29 \"/usr/include/errno.h\" 3 4\n# 1 \"/usr/include/features.h\" 1 3 4\n# 361 \"/usr/include/features.h\" 3 4\n# 1 \"/usr/include/sys/cdefs.h\" 1 3 4\n# 365 \"/usr/include/sys/cdefs.h\" 3 4\n# 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n# 366 \"/usr/include/sys/cdefs.h\" 2 3 4\n# 362 \"/usr/include/features.h\" 2 3 4\n# 385 \"/usr/include/features.h\" 3 4\n# 1 \"/usr/include/gnu/stubs.h\" 1 3 4\n\n\n\n# 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n# 5 \"/usr/include/gnu/stubs.h\" 2 3 4\n\n\n\n\n# 1 \"/usr/include/gnu/stubs-64.h\" 1 3 4\n# 10 \"/usr/include/gnu/stubs.h\" 2 3 4\n# 386 \"/usr/include/features.h\" 2 3 4\n# 30 \"/usr/include/errno.h\" 2 3 4\n\n\n\n\n\n\n# 1 \"/usr/include/bits/errno.h\" 1 3 4\n# 25 \"/usr/include/bits/errno.h\" 3 4\n# 1 \"/usr/include/linux/errno.h\" 1 3 4\n\n\n\n# 1 \"/usr/include/asm/errno.h\" 1 3 4\n# 1 \"/usr/include/asm-generic/errno.h\" 1 3 4\n\n\n\n# 1 \"/usr/include/asm-generic/errno-base.h\" 1 3 4\n# 5 \"/usr/include/asm-generic/errno.h\" 2 3 4\n# 1 \"/usr/include/asm/errno.h\" 2 3 4\n# 5 \"/usr/include/linux/errno.h\" 2 3 4\n# 26 \"/usr/include/bits/errno.h\" 2 3 4\n# 47 \"/usr/include/bits/errno.h\" 3 4\nextern int *__errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n# 37 \"/usr/include/errno.h\" 2 3 4\n# 59 \"/usr/include/errno.h\" 3 4\n\n# 4 \"packet.c\" 2\n# 1 \"/usr/include/stdint.h\" 1 3 4\n# 27 \"/usr/include/stdint.h\" 3 4\n# 1 \"/usr/include/bits/wchar.h\" 1 3 4\n# 28 \"/usr/include/stdint.h\" 2 3 4\n# 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n# 29 \"/usr/include/stdint.h\" 2 3 4\n# 37 \"/usr/include/stdint.h\" 3 4\ntypedef signed char int8_t;\ntypedef short int int16_t;\ntypedef int int32_t;\n\ntypedef long int int64_t;\n\n\n\n\n\n\n\ntypedef unsigned char uint8_t;\ntypedef unsigned short int uint16_t;\n\ntypedef unsigned int uint32_t;\n\n\n\ntypedef unsigned long int uint64_t;\n# 66 \"/usr/include/stdint.h\" 3 4\ntypedef signed char int_least8_t;\ntypedef short int int_least16_t;\ntypedef int int_least32_t;\n\ntypedef long int int_least64_t;\n\n\n\n\n\n\ntypedef unsigned char uint_least8_t;\ntypedef unsigned short int uint_least16_t;\ntypedef unsigned int uint_least32_t;\n\ntypedef unsigned long int uint_least64_t;\n# 91 \"/usr/include/stdint.h\" 3 4\ntypedef signed char int_fast8_t;\n\ntypedef long int int_fast16_t;\ntypedef long int int_fast32_t;\ntypedef long int int_fast64_t;\n# 104 \"/usr/include/stdint.h\" 3 4\ntypedef unsigned char uint_fast8_t;\n\ntypedef unsigned long int uint_fast16_t;\ntypedef unsigned long int uint_fast32_t;\ntypedef unsigned long int uint_fast64_t;\n# 120 \"/usr/include/stdint.h\" 3 4\ntypedef long int intptr_t;\n\n\ntypedef unsigned long int uintptr_t;\n# 135 \"/usr/include/stdint.h\" 3 4\ntypedef long int intmax_t;\ntypedef unsigned long int uintmax_t;\n# 5 \"packet.c\" 2\n\n# 1 \"ioutil.h\" 1\n\n\n\n\n\n# 1 \"/usr/include/sys/types.h\" 1 3 4\n# 28 \"/usr/include/sys/types.h\" 3 4\n\n\n# 1 \"/usr/include/bits/types.h\" 1 3 4\n# 28 \"/usr/include/bits/types.h\" 3 4\n# 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n# 29 \"/usr/include/bits/types.h\" 2 3 4\n\n\ntypedef unsigned char __u_char;\ntypedef unsigned short int __u_short;\ntypedef unsigned int __u_int;\ntypedef unsigned long int __u_long;\n\n\ntypedef signed char __int8_t;\ntypedef unsigned char __uint8_t;\ntypedef signed short int __int16_t;\ntypedef unsigned short int __uint16_t;\ntypedef signed int __int32_t;\ntypedef unsigned int __uint32_t;\n\ntypedef signed long int __int64_t;\ntypedef unsigned long int __uint64_t;\n\n\n\n\n\n\n\ntypedef long int __quad_t;\ntypedef unsigned long int __u_quad_t;\n# 131 \"/usr/include/bits/types.h\" 3 4\n# 1 \"/usr/include/bits/typesizes.h\" 1 3 4\n# 132 \"/usr/include/bits/types.h\" 2 3 4\n\n\ntypedef unsigned long int __dev_t;\ntypedef unsigned int __uid_t;\ntypedef unsigned int __gid_t;\ntypedef unsigned long int __ino_t;\ntypedef unsigned long int __ino64_t;\ntypedef unsigned int __mode_t;\ntypedef unsigned long int __nlink_t;\ntypedef long int __off_t;\ntypedef long int __off64_t;\ntypedef int __pid_t;\ntypedef struct { int __val[2]; } __fsid_t;\ntypedef long int __clock_t;\ntypedef unsigned long int __rlim_t;\ntypedef unsigned long int __rlim64_t;\ntypedef unsigned int __id_t;\ntypedef long int __time_t;\ntypedef unsigned int __useconds_t;\ntypedef long int __suseconds_t;\n\ntypedef int __daddr_t;\ntypedef long int __swblk_t;\ntypedef int __key_t;\n\n\ntypedef int __clockid_t;\n\n\ntypedef void * __timer_t;\n\n\ntypedef long int __blksize_t;\n\n\n\n\ntypedef long int __blkcnt_t;\ntypedef long int __blkcnt64_t;\n\n\ntypedef unsigned long int __fsblkcnt_t;\ntypedef unsigned long int __fsblkcnt64_t;\n\n\ntypedef unsigned long int __fsfilcnt_t;\ntypedef unsigned long int __fsfilcnt64_t;\n\ntypedef long int __ssize_t;\n\n\n\ntypedef __off64_t __loff_t;\ntypedef __quad_t *__qaddr_t;\ntypedef char *__caddr_t;\n\n\ntypedef long int __intptr_t;\n\n\ntypedef unsigned int __socklen_t;\n# 31 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\ntypedef __u_char u_char;\ntypedef __u_short u_short;\ntypedef __u_int u_int;\ntypedef __u_long u_long;\ntypedef __quad_t quad_t;\ntypedef __u_quad_t u_quad_t;\ntypedef __fsid_t fsid_t;\n\n\n\n\ntypedef __loff_t loff_t;\n\n\n\ntypedef __ino_t ino_t;\n# 61 \"/usr/include/sys/types.h\" 3 4\ntypedef __dev_t dev_t;\n\n\n\n\ntypedef __gid_t gid_t;\n\n\n\n\ntypedef __mode_t mode_t;\n\n\n\n\ntypedef __nlink_t nlink_t;\n\n\n\n\ntypedef __uid_t uid_t;\n\n\n\n\n\ntypedef __off_t off_t;\n# 99 \"/usr/include/sys/types.h\" 3 4\ntypedef __pid_t pid_t;\n\n\n\n\n\ntypedef __id_t id_t;\n\n\n\n\ntypedef __ssize_t ssize_t;\n\n\n\n\n\ntypedef __daddr_t daddr_t;\ntypedef __caddr_t caddr_t;\n\n\n\n\n\ntypedef __key_t key_t;\n# 133 \"/usr/include/sys/types.h\" 3 4\n# 1 \"/usr/include/time.h\" 1 3 4\n# 58 \"/usr/include/time.h\" 3 4\n\n\ntypedef __clock_t clock_t;\n\n\n\n# 74 \"/usr/include/time.h\" 3 4\n\n\ntypedef __time_t time_t;\n\n\n\n# 92 \"/usr/include/time.h\" 3 4\ntypedef __clockid_t clockid_t;\n# 104 \"/usr/include/time.h\" 3 4\ntypedef __timer_t timer_t;\n# 134 \"/usr/include/sys/types.h\" 2 3 4\n# 147 \"/usr/include/sys/types.h\" 3 4\n# 1 \"/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stddef.h\" 1 3 4\n# 211 \"/usr/lib/gcc/x86_64-redhat-linux/4.4.6/include/stddef.h\" 3 4\ntypedef long unsigned int size_t;\n# 148 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\ntypedef unsigned long int ulong;\ntypedef unsigned short int ushort;\ntypedef unsigned int uint;\n# 201 \"/usr/include/sys/types.h\" 3 4\ntypedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));\ntypedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));\n\ntypedef int register_t __attribute__ ((__mode__ (__word__)));\n# 217 \"/usr/include/sys/types.h\" 3 4\n# 1 \"/usr/include/endian.h\" 1 3 4\n# 37 \"/usr/include/endian.h\" 3 4\n# 1 \"/usr/include/bits/endian.h\" 1 3 4\n# 38 \"/usr/include/endian.h\" 2 3 4\n# 61 \"/usr/include/endian.h\" 3 4\n# 1 \"/usr/include/bits/byteswap.h\" 1 3 4\n# 28 \"/usr/include/bits/byteswap.h\" 3 4\n# 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n# 29 \"/usr/include/bits/byteswap.h\" 2 3 4\n# 62 \"/usr/include/endian.h\" 2 3 4\n# 218 \"/usr/include/sys/types.h\" 2 3 4\n\n\n# 1 \"/usr/include/sys/select.h\" 1 3 4\n# 31 \"/usr/include/sys/select.h\" 3 4\n# 1 \"/usr/include/bits/select.h\" 1 3 4\n# 23 \"/usr/include/bits/select.h\" 3 4\n# 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n# 24 \"/usr/include/bits/select.h\" 2 3 4\n# 32 \"/usr/include/sys/select.h\" 2 3 4\n\n\n# 1 \"/usr/include/bits/sigset.h\" 1 3 4\n# 24 \"/usr/include/bits/sigset.h\" 3 4\ntypedef int __sig_atomic_t;\n\n\n\n\ntypedef struct\n  {\n    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];\n  } __sigset_t;\n# 35 \"/usr/include/sys/select.h\" 2 3 4\n\n\n\ntypedef __sigset_t sigset_t;\n\n\n\n\n\n# 1 \"/usr/include/time.h\" 1 3 4\n# 120 \"/usr/include/time.h\" 3 4\nstruct timespec\n  {\n    __time_t tv_sec;\n    long int tv_nsec;\n  };\n# 45 \"/usr/include/sys/select.h\" 2 3 4\n\n# 1 \"/usr/include/bits/time.h\" 1 3 4\n# 75 \"/usr/include/bits/time.h\" 3 4\nstruct timeval\n  {\n    __time_t tv_sec;\n    __suseconds_t tv_usec;\n  };\n# 47 \"/usr/include/sys/select.h\" 2 3 4\n\n\ntypedef __suseconds_t suseconds_t;\n\n\n\n\n\ntypedef long int __fd_mask;\n# 67 \"/usr/include/sys/select.h\" 3 4\ntypedef struct\n  {\n\n\n\n\n\n\n    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];\n\n\n  } fd_set;\n\n\n\n\n\n\ntypedef __fd_mask fd_mask;\n# 99 \"/usr/include/sys/select.h\" 3 4\n\n# 109 \"/usr/include/sys/select.h\" 3 4\nextern int select (int __nfds, fd_set *__restrict __readfds,\n     fd_set *__restrict __writefds,\n     fd_set *__restrict __exceptfds,\n     struct timeval *__restrict __timeout);\n# 121 \"/usr/include/sys/select.h\" 3 4\nextern int pselect (int __nfds, fd_set *__restrict __readfds,\n      fd_set *__restrict __writefds,\n      fd_set *__restrict __exceptfds,\n      const struct timespec *__restrict __timeout,\n      const __sigset_t *__restrict __sigmask);\n\n\n\n# 221 \"/usr/include/sys/types.h\" 2 3 4\n\n\n# 1 \"/usr/include/sys/sysmacros.h\" 1 3 4\n# 30 \"/usr/include/sys/sysmacros.h\" 3 4\n__extension__\nextern unsigned int gnu_dev_major (unsigned long long int __dev)\n     __attribute__ ((__nothrow__));\n__extension__\nextern unsigned int gnu_dev_minor (unsigned long long int __dev)\n     __attribute__ ((__nothrow__));\n__extension__\nextern unsigned long long int gnu_dev_makedev (unsigned int __major,\n            unsigned int __minor)\n     __attribute__ ((__nothrow__));\n# 224 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\n\n\ntypedef __blksize_t blksize_t;\n\n\n\n\n\n\ntypedef __blkcnt_t blkcnt_t;\n\n\n\ntypedef __fsblkcnt_t fsblkcnt_t;\n\n\n\ntypedef __fsfilcnt_t fsfilcnt_t;\n# 271 \"/usr/include/sys/types.h\" 3 4\n# 1 \"/usr/include/bits/pthreadtypes.h\" 1 3 4\n# 23 \"/usr/include/bits/pthreadtypes.h\" 3 4\n# 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n# 24 \"/usr/include/bits/pthreadtypes.h\" 2 3 4\n# 50 \"/usr/include/bits/pthreadtypes.h\" 3 4\ntypedef unsigned long int pthread_t;\n\n\ntypedef union\n{\n  char __size[56];\n  long int __align;\n} pthread_attr_t;\n\n\n\ntypedef struct __pthread_internal_list\n{\n  struct __pthread_internal_list *__prev;\n  struct __pthread_internal_list *__next;\n} __pthread_list_t;\n# 76 \"/usr/include/bits/pthreadtypes.h\" 3 4\ntypedef union\n{\n  struct __pthread_mutex_s\n  {\n    int __lock;\n    unsigned int __count;\n    int __owner;\n\n    unsigned int __nusers;\n\n\n\n    int __kind;\n\n    int __spins;\n    __pthread_list_t __list;\n# 101 \"/usr/include/bits/pthreadtypes.h\" 3 4\n  } __data;\n  char __size[40];\n  long int __align;\n} pthread_mutex_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_mutexattr_t;\n\n\n\n\ntypedef union\n{\n  struct\n  {\n    int __lock;\n    unsigned int __futex;\n    __extension__ unsigned long long int __total_seq;\n    __extension__ unsigned long long int __wakeup_seq;\n    __extension__ unsigned long long int __woken_seq;\n    void *__mutex;\n    unsigned int __nwaiters;\n    unsigned int __broadcast_seq;\n  } __data;\n  char __size[48];\n  __extension__ long long int __align;\n} pthread_cond_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_condattr_t;\n\n\n\ntypedef unsigned int pthread_key_t;\n\n\n\ntypedef int pthread_once_t;\n\n\n\n\n\ntypedef union\n{\n\n  struct\n  {\n    int __lock;\n    unsigned int __nr_readers;\n    unsigned int __readers_wakeup;\n    unsigned int __writer_wakeup;\n    unsigned int __nr_readers_queued;\n    unsigned int __nr_writers_queued;\n    int __writer;\n    int __shared;\n    unsigned long int __pad1;\n    unsigned long int __pad2;\n\n\n    unsigned int __flags;\n  } __data;\n# 187 \"/usr/include/bits/pthreadtypes.h\" 3 4\n  char __size[56];\n  long int __align;\n} pthread_rwlock_t;\n\ntypedef union\n{\n  char __size[8];\n  long int __align;\n} pthread_rwlockattr_t;\n\n\n\n\n\ntypedef volatile int pthread_spinlock_t;\n\n\n\n\ntypedef union\n{\n  char __size[32];\n  long int __align;\n} pthread_barrier_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_barrierattr_t;\n# 272 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\n# 7 \"ioutil.h\" 2\n\n\nssize_t read_all(int fd, void* buf, size_t bytes_needed);\n# 7 \"packet.c\" 2\n# 34 \"packet.c\"\ntypedef enum {\n  START_PACKET, STRING(tag) STRING(filename) STRING(cwd) STRING_LIST(argc, argv) STRING_LIST(envc, envv) STOP_PACKET, STRING(filename) STRING(cwd) STRING_LIST(argc, argv) STRING_LIST(envc, envv)\n  PACKET_TYPE_MAX\n} packet_type_t;\n# 46 \"packet.c\"\n    packet_type_t type;\n# 56 \"packet.c\"\ntypedef struct { char* tag; char* filename; char* cwd; int32_t argc; char** argv; int32_t envc; char** envv; } start_packet_t; typedef struct { char* filename; char* cwd; int32_t argc; char** argv; int32_t envc; char** envv; } stop_packet_t;\n# 86 \"packet.c\"\n  {\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))\n      return -1;\n\n    if (packet)\n      packet->field = *(uint32_t*) (wire_data + wire_data_pos);\n    wire_data_pos += sizeof(uint32_t);\n  }\n #define STRING(field)\n  {\n    uint32_t len;\n\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))\n      return -1;\n\n    len = *(uint32_t*) (wire_data + wire_data_pos);\n    field_data_pos += sizeof(uint32_t);\n    wire_data_pos += sizeof(uint32_t);\n\n    if (wire_data_size < wire_data_pos + len)\n      return -1;\n\n    if (field_data) {\n      memcpy(field_data + field_data_pos, wire_data + wire_data_pos, len);\n      field_data[field_data_pos + len] = '\\0';\n    }\n\n    wire_data_pos += len;\n    field_data_pos += len + 1;\n  }\n\n  {\n    int32_t i, count;\n    size_t array_size;\n\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))\n      return -1;\n\n    count = *(uint32_t*) (wire_data + wire_data_pos);\n\n    if (packet != NULL)\n      packet->count_field = count;\n\n    wire_data_pos += sizeof(uint32_t);\n\n\n    array_size = sizeof(char*) * (count + 1);\n\n    if (packet) {\n      packet->array_field = (char**) field_data + field_data_pos;\n      packet->array_field[count] = NULL;\n    }\n\n    field_data_pos += array_size;\n\n    for (i = 0; i < count; i++) {\n      STRING((packet)->(array_field)[i]\n    }\n  }\n\n\n\n\n\\ ssize_t parse_start_packet(char* wire_data, size_t wire_data_size, char* buf) { start_packet_t* packet; char* field_data; size_t wire_data_pos; size_t field_data_pos; if (buf != NULL) { packet = (start_packet_t*) buf; data = (char*) (buf + 1); packet->type = START; } else { packet = NULL; data = NULL; } wire_data_pos = 0; field_data_pos = 0; STRING(tag) STRING(filename) STRING(cwd) return sizeof(*packet) + field_data_pos; } \\ ssize_t parse_stop_packet(char* wire_data, size_t wire_data_size, char* buf) { stop_packet_t* packet; char* field_data; size_t wire_data_pos; size_t field_data_pos; if (buf != NULL) { packet = (stop_packet_t*) buf; data = (char*) (buf + 1); packet->type = STOP; } else { packet = NULL; data = NULL; } wire_data_pos = 0; field_data_pos = 0; STRING(filename) STRING(cwd) return sizeof(*packet) + field_data_pos; };\n# 159 \"packet.c\"\nint read_packet(int fd, void** packet_ptr) {\n  char* wire_data;\n  ssize_t r;\n  int result;\n\n  struct __attribue__((packed)) {\n    int32_t type;\n    int32_t size;\n  } header;\n\n  r = read_all(fd, &total_size, sizeof header)\n  if (r < 0) {\n    return -1;\n  } else if (r != sizeof header) {\n    (*__errno_location ()) = 74;\n    return -1;\n  }\n\n  wire_data = malloc(header.size);\n  if (wire_data == NULL)\n    return -1;\n\n  r = read_all(fd, wire_data, header.size);\n  if (r < 0) {\n    return -1;\n  } else if (r != header.size) {\n    (*__errno_location ()) = 74;\n    return -1;\n  }\n\n  switch ((packet_type_t) header.type) {\n# 216 \"packet.c\"\n    case START_PACKET: { ssize_t size = parse_start_packet(wire_data, header.size, NULL); if (size < 0) { result = -1; break; } start_packet_t* packet = malloc(sizeof *packet); if (packet == NULL) { result = -1; break; } size = parse_start_packet(wire_data, header.size, packet); if (size < 0) { result = -1; break; } result = 0; break; } STRING(tag) STRING(filename) STRING(cwd) STRING_LIST(argc, argv) STRING_LIST(envc, envv) case STOP_PACKET: { ssize_t size = parse_stop_packet(wire_data, header.size, NULL); if (size < 0) { result = -1; break; } stop_packet_t* packet = malloc(sizeof *packet); if (packet == NULL) { result = -1; break; } size = parse_stop_packet(wire_data, header.size, packet); if (size < 0) { result = -1; break; } result = 0; break; } STRING(filename) STRING(cwd) STRING_LIST(argc, argv) STRING_LIST(envc, envv)\n\n\n\n\n    default:\n      (*__errno_location ()) = 74;\n      result = -1;\n  }\n\n  free(wire_data);\n\n  return result;\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":16050}]],"length":16050}
