{"ts":1350648550567,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1350649485031,"patch":[[{"diffs":[[1,"\n\n\n#define START_PACKET() \\\n  PROLOGUE(start) \\\n    FIELD(STRING(filename)) \\\n    FIELD(STRING(cwd)) \\\n    FIELD(STRING_LIST(argc, argv)) \\\n    FIELD(STRING_LIST(envc, envv)) \\\n  EPILOGUE(start)\n\n/* Define structs. */\n#define PROLOGUE(name) typedef struct {\n#define FIELD(v) v\n#define STRING(field) \\\n  char* field;\n#define STRING_LIST(count_field, array_field) \\\n  int count_field; \\\n  char** array_field;\n#define EPILOGUE(name) } name##_packet_t;\n\nSTART_PACKET(\n\ntypedef struct {\n  SPAWN_PACKET(XX)\n} spawn_packet_t;\n\n#undef STRING\n#undef STRING_LIST\n#undef XX\n\n"]],"start1":0,"start2":0,"length1":0,"length2":564}]],"length":564,"saved":false}
{"ts":1350649502979,"patch":[[{"diffs":[[0,"_PACKET("],[1,");"],[0,"\n\ntypede"]],"start1":455,"start2":455,"length1":16,"length2":18}]],"length":566,"saved":false}
{"ts":1350649527828,"patch":[[{"diffs":[[0,"PACKET()"],[-1,";"],[0,"\n\ntypede"]],"start1":456,"start2":456,"length1":17,"length2":16}]],"length":565,"saved":false}
{"ts":1350649530661,"patch":[[{"diffs":[[0,"()\n\n"],[-1,"typedef struct {\n  SPAWN_PACKET(XX)\n} spawn_packet_t;\n\n"],[0,"#und"]],"start1":462,"start2":462,"length1":63,"length2":8}]],"length":510,"saved":false}
{"ts":1350649575830,"patch":[[{"diffs":[[0,"start)\n\n"],[1,"#define START_PACKET() \\\n  PROLOGUE(start) \\\n    FIELD(STRING(filename)) \\\n    FIELD(STRING(cwd)) \\\n    FIELD(STRING_LIST(argc, argv)) \\\n    FIELD(STRING_LIST(envc, envv)) \\\n  EPILOGUE(start)\n\n"],[0,"/* Defin"]],"start1":188,"start2":188,"length1":16,"length2":209},{"diffs":[[0," \\\n  int"],[1,"32_t"],[0," count_f"]],"start1":554,"start2":554,"length1":16,"length2":20}]],"length":707,"saved":false}
{"ts":1350649583884,"patch":[[{"diffs":[[1,"\n\n#include <stdint.h>"],[0,"\n\n\n#defi"]],"start1":0,"start2":0,"length1":8,"length2":29}]],"length":728,"saved":false}
{"ts":1350649952078,"patch":[[{"diffs":[[0,"  PROLOGUE(start"],[-1,""],[0,""],[1,", START) \\\n    FIELD(STRING(tag)"],[0,") \\\n    FIELD(ST"]],"start1":49,"start2":49,"length1":32,"length2":64},{"diffs":[[0,"UE(start"],[1,", START"],[0,")\n\n#defi"]],"start1":238,"start2":238,"length1":16,"length2":23},{"diffs":[[0,"ART)\n\n#define ST"],[-1,"ART"],[1,"OP"],[0,"_PACKET() \\\n  PR"]],"start1":250,"start2":250,"length1":35,"length2":34},{"diffs":[[0,"LOGUE(st"],[-1,"art"],[1,"op, STOP"],[0,") \\\n    "]],"start1":285,"start2":285,"length1":19,"length2":24},{"diffs":[[0,"E(st"],[-1,"art)"],[1,"op, STOP)\n\n\n/* Define enum with types. */\n#define PROLOGUE(lc, uc) uc##_PACKET,\n#define EPILOGUE(lc, uc) /* empty */\n#define FIELD(name) /* empty */\n\ntypedef enum {\n  START_PACKET()\n  STOP_PACKET()\n  PACKET_TYPE_MAX\n} packet_type_t;\n\n#undef PROLOGUE\n#undef FIELD\n#undef EPILOGUE\n"],[0,"\n\n/*"]],"start1":443,"start2":443,"length1":12,"length2":287},{"diffs":[[0,"ROLOGUE("],[-1,"name"],[1,"lc, uc"],[0,") typede"]],"start1":759,"start2":759,"length1":20,"length2":22},{"diffs":[[0,"LD(v) v\n"],[1,"#define NUMBER(field) int32_t field;\n"],[0,"#define "]],"start1":803,"start2":803,"length1":16,"length2":53},{"diffs":[[0,"GUE("],[-1,"name) } name"],[1,"lc, uc) } lc"],[0,"##_p"]],"start1":995,"start2":995,"length1":20,"length2":20},{"diffs":[[0,"def "],[-1,"STRING\n#undef STRING_LIST\n#undef XX"],[1,"PROLOGUE\n#undef FIELD\n#undef NUMBER\n#undef STRING\n#undef STRING_LIST\n#undef EPILOGUE\n\n\n/* Define functions to read a packet. */"],[0,"\n\n"]],"start1":1044,"start2":1044,"length1":41,"length2":133}]],"length":1177,"saved":false}
{"ts":1350650563415,"patch":[[{"diffs":[[0," packet. */\n"],[1,"ssize_t read_packet("],[0,"\n"]],"start1":1164,"start2":1164,"length1":13,"length2":33}]],"length":1197,"saved":false}
{"ts":1350650586481,"patch":[[{"diffs":[[0,"_packet("],[1,"int fd) {\n    \n    \n}"],[0,"\n"]],"start1":1188,"start2":1188,"length1":9,"length2":30}]],"length":1218,"saved":false}
{"ts":1350650587782,"patch":[[{"diffs":[[0,") {\n    "],[1," "],[0,"\n    \n}\n"]],"start1":1202,"start2":1202,"length1":16,"length2":17}]],"length":1219,"saved":false}
{"ts":1350650786287,"patch":[[{"diffs":[[0,"undef EPILOGUE\n\n"],[-1,"\n"],[0,"/* Define functi"]],"start1":1118,"start2":1118,"length1":33,"length2":32},{"diffs":[[0,"fd) {\n  "],[-1," "],[1,"struct {\n    int32_t total_size;\n    int32_t type;\n  } header;\n  \n  if (read_all(fd, &header, sizeof header) < 0)\n    return -1;\n    \n"],[0,"  \n    \n"]],"start1":1199,"start2":1199,"length1":17,"length2":150}]],"length":1351,"saved":false}
{"ts":1350650826731,"patch":[[{"diffs":[[0,"dint.h>\n"],[1,"#include \"ioutil.h\"\n"],[0,"\n\n#defin"]],"start1":14,"start2":14,"length1":16,"length2":36}]],"length":1371,"saved":false}
{"ts":1350657083092,"patch":[[{"diffs":[[0,"dint.h>\n"],[1,"\n"],[0,"#include"]],"start1":14,"start2":14,"length1":16,"length2":17},{"diffs":[[0,"ILOGUE\n\n"],[1,"\n"],[0,"/* Defin"]],"start1":1147,"start2":1147,"length1":16,"length2":17},{"diffs":[[0,"\n    \n  "],[1,"if ("],[0,"\n    \n}\n"]],"start1":1357,"start2":1357,"length1":16,"length2":20}]],"length":1377,"saved":false}
{"ts":1350657226581,"patch":[[{"diffs":[[0,"t fd) {\n"],[1,"  void* buf;\n    \n"],[0,"  struct"]],"start1":1219,"start2":1219,"length1":16,"length2":34},{"diffs":[[0," \n  "],[-1,"if (\n    "],[0,"\n}\n"]],"start1":1379,"start2":1379,"length1":16,"length2":7}]],"length":1386,"saved":false}
{"ts":1350657370322,"patch":[[{"diffs":[[0,"\n\n"],[1,"#include <errno.h>\n"],[0,"#include <stdint"]],"start1":0,"start2":0,"length1":18,"length2":37},{"diffs":[[0," */\n"],[-1,"ssize_t"],[1,"void*"],[0," rea"]],"start1":1212,"start2":1212,"length1":15,"length2":13},{"diffs":[[0,"\n    \n  "],[1,"switch ((packet_type_t) header.type) {\n   \n   \n   \n  }\n  \n  errno"],[0,"\n}\n"]],"start1":1392,"start2":1392,"length1":11,"length2":76}]],"length":1468,"saved":false}
{"ts":1350657387466,"patch":[[{"diffs":[[0,"\n  errno"],[1," = EBADMSG;\n  return NULL;"],[0,"\n}\n"]],"start1":1457,"start2":1457,"length1":11,"length2":37}]],"length":1494,"saved":false}
{"ts":1350657391465,"patch":[[{"diffs":[[0,"urn "],[-1,"-1"],[1,"NULL"],[0,";\n  "]],"start1":1385,"start2":1385,"length1":10,"length2":12}]],"length":1496,"saved":false}
{"ts":1350657469574,"patch":[[{"diffs":[[0,"ndef EPILOGUE\n\n\n"],[1,"\n\n#define PROLOGUE(lc, uc) \\\n  case uc##_PACKET: \\\n    \n\n\n"],[0,"/* Define functi"]],"start1":1159,"start2":1159,"length1":32,"length2":90},{"diffs":[[0,"ket. */\n"],[-1,"void*"],[1,"int"],[0," read_pa"]],"start1":1266,"start2":1266,"length1":21,"length2":19},{"diffs":[[0,"t(int fd"],[1,", void** packet"],[0,") {\n  vo"]],"start1":1288,"start2":1288,"length1":16,"length2":31},{"diffs":[[0," return "],[-1,"NULL"],[1,"-1"],[0,";\n    \n "]],"start1":1452,"start2":1452,"length1":20,"length2":18},{"diffs":[[0,"e) {\n   "],[1," "],[0,"\n   \n   "],[1," "],[0,"\n  }\n  \n"]],"start1":1505,"start2":1505,"length1":24,"length2":26},{"diffs":[[0,"urn "],[-1,"NULL"],[1,"-1"],[0,";\n}\n"]],"start1":1555,"start2":1555,"length1":12,"length2":10}]],"length":1565,"saved":false}
{"ts":1350658072706,"patch":[[{"diffs":[[0,"lc, uc) "],[-1,"\\"],[0,"\n  case "]],"start1":1194,"start2":1194,"length1":17,"length2":16},{"diffs":[[0,"PACKET: "],[-1,"\\"],[1,"{\n    char* buf;\n    lc##_packet_t* packet; \n    \n    buf = malloc(sizeof *packet + header.total_size);\n    if (buf == NULL)\n      return -1;\n    \n    \n    \n    "],[0,"\n    \n\n\n"]],"start1":1215,"start2":1215,"length1":17,"length2":177},{"diffs":[[0,"et) {\n  "],[-1,"void"],[1,"char"],[0,"* buf;\n "]],"start1":1468,"start2":1468,"length1":20,"length2":20},{"diffs":[[0,"har* buf;\n  "],[-1,"  "],[0,"\n  struct {\n"]],"start1":1477,"start2":1477,"length1":26,"length2":24},{"diffs":[[0,"r) < 0)\n"],[-1,""],[0,"    retu"]],"start1":1598,"start2":1598,"length1":16,"length2":16},{"diffs":[[0,"1;\n    \n"],[1,"  buf = malloc(header.total_size);\n  if (buf == NULL)\n    return -1;\n    \n  \n    \n"],[0,"  switch"]],"start1":1618,"start2":1618,"length1":16,"length2":98}]],"length":1804,"saved":false}
{"ts":1350658934905,"patch":[[{"diffs":[[0,"lc, uc) "],[-1,""],[0,""],[1,"\\\n  "],[0,"typedef "]],"start1":807,"start2":807,"length1":16,"length2":20},{"diffs":[[0,"(field) \\\n  "],[-1,""],[0,""],[1,"  "],[0,"char* field;"]],"start1":906,"start2":906,"length1":24,"length2":26},{"diffs":[[0,"ield) \\\n"],[1,"  "],[0,"  int32_"]],"start1":973,"start2":973,"length1":16,"length2":18},{"diffs":[[0,"ield; \\\n"],[1,"  "],[0,"  char**"]],"start1":1000,"start2":1000,"length1":16,"length2":18},{"diffs":[[0,"(lc, uc)"],[1," \\\n "],[0," } lc##_"]],"start1":1048,"start2":1048,"length1":16,"length2":20},{"diffs":[[0,"LOGUE\n\n\n"],[-1,"\n\n"],[0,"#define "]],"start1":1181,"start2":1181,"length1":18,"length2":16},{"diffs":[[0,"1;\n    \n"],[-1,"    \n    \n    \n    "],[1,"\nstatic ssize_t parse_packet("],[0,"\n\n\n/* De"]],"start1":1374,"start2":1374,"length1":35,"length2":45},{"diffs":[[0,"ar* "],[-1,"buf;\n  \n  struct"],[1,"wire_data;\n  ssize_t r;\n  struct __attribue__((packed))"],[0," {\n "]],"start1":1500,"start2":1500,"length1":24,"length2":63},{"diffs":[[0,"int32_t "],[-1,"total_"],[0,"size;\n  "]],"start1":1566,"start2":1566,"length1":22,"length2":16},{"diffs":[[0,"r;\n  \n  "],[-1,"if ("],[1,"r = "],[0,"read_all"]],"start1":1607,"start2":1607,"length1":20,"length2":20},{"diffs":[[0,"ll(fd, &"],[-1,"header"],[1,"total_size"],[0,", sizeof"]],"start1":1625,"start2":1625,"length1":22,"length2":26},{"diffs":[[0,"der)"],[-1," < 0)"],[1,"\n  if (r < 0) {\n    return -1;\n  } else if (r != sizeof header) {\n    errno = EBADMSG;"],[0,"\n   "]],"start1":1655,"start2":1655,"length1":13,"length2":94},{"diffs":[[0,"-1;\n"],[1,"  }\n"],[0,"    \n  "],[-1,"buf"],[1,"wire_data"],[0," = m"]],"start1":1757,"start2":1757,"length1":18,"length2":28},{"diffs":[[0,"lloc(header."],[-1,"total_"],[0,"size);\n  if "]],"start1":1786,"start2":1786,"length1":30,"length2":24},{"diffs":[[0,"ize);\n  if ("],[-1,"buf"],[1,"wire_data"],[0," == NULL)\n  "]],"start1":1799,"start2":1799,"length1":27,"length2":33},{"diffs":[[0," \n  "],[-1,"\n    \n  switch ((packet_type_t)"],[1,"r = read_all(fd, wire_data, header.total_size);\n  if (r < 0) {\n    return -1;\n  } else if (r != sizeof"],[0," header"],[-1,".type"],[0,") {\n    "],[-1,"\n   "],[1,"errno = EBADMSG;\n    return -1;"],[0,"\n  "],[1,"}\n"],[0,"  \n  "],[-1,"}"],[1,"\n    "],[0,"\n  \n"]],"start1":1848,"start2":1848,"length1":72,"length2":171}]],"length":2053,"saved":false}
{"ts":1350659883179,"patch":[[{"diffs":[[-1,"\n"],[1,"\r\n\r"],[0,"\n#include <errno"]],"start1":0,"start2":0,"length1":17,"length2":19},{"diffs":[[0,"errno.h>"],[1,"\r"],[0,"\n#includ"]],"start1":14,"start2":14,"length1":16,"length2":17},{"diffs":[[0,"tdint.h>"],[-1,"\n"],[1,"\r\n\r"],[0,"\n#includ"]],"start1":35,"start2":35,"length1":17,"length2":19},{"diffs":[[0,"outil.h\""],[-1,"\n\n"],[1,"\r\n\r\n\r"],[0,"\n#define"]],"start1":58,"start2":58,"length1":18,"length2":21},{"diffs":[[0,"START_PACKET() \\"],[1,"\r"],[0,"\n  PROLOGUE(star"]],"start1":80,"start2":80,"length1":32,"length2":33},{"diffs":[[0,"START) \\"],[1,"\r"],[0,"\n    FIE"]],"start1":116,"start2":116,"length1":16,"length2":17},{"diffs":[[0,"RING(tag)) \\"],[1,"\r"],[0,"\n    FIELD(S"]],"start1":138,"start2":138,"length1":24,"length2":25},{"diffs":[[0,"ING(filename)) \\"],[1,"\r"],[0,"\n    FIELD(STRIN"]],"start1":165,"start2":165,"length1":32,"length2":33},{"diffs":[[0,"D(STRING(cwd)) \\"],[1,"\r"],[0,"\n    FIELD(STRIN"]],"start1":191,"start2":191,"length1":32,"length2":33},{"diffs":[[0,"T(argc, argv)) \\"],[1,"\r"],[0,"\n    FIELD(STRIN"]],"start1":229,"start2":229,"length1":32,"length2":33},{"diffs":[[0,"T(envc, envv)) \\"],[1,"\r"],[0,"\n  EPILOGUE(star"]],"start1":267,"start2":267,"length1":32,"length2":33},{"diffs":[[0,", START)"],[-1,"\n"],[1,"\r\n\r"],[0,"\n#define"]],"start1":301,"start2":301,"length1":17,"length2":19},{"diffs":[[0,"CKET() \\"],[1,"\r"],[0,"\n  PROLO"]],"start1":328,"start2":328,"length1":16,"length2":17},{"diffs":[[0," STOP) \\"],[1,"\r"],[0,"\n    FIE"]],"start1":354,"start2":354,"length1":16,"length2":17},{"diffs":[[0,"filename)) \\"],[1,"\r"],[0,"\n    FIELD(S"]],"start1":381,"start2":381,"length1":24,"length2":25},{"diffs":[[0,"RING(cwd)) \\"],[1,"\r"],[0,"\n    FIELD(S"]],"start1":407,"start2":407,"length1":24,"length2":25},{"diffs":[[0,"argv)) \\"],[1,"\r"],[0,"\n    FIE"]],"start1":449,"start2":449,"length1":16,"length2":17},{"diffs":[[0,"envv)) \\"],[1,"\r"],[0,"\n  EPILO"]],"start1":487,"start2":487,"length1":16,"length2":17},{"diffs":[[0,"p, STOP)"],[-1,"\n\n"],[1,"\r\n\r\n#define ALL_PACKET_TYPES() \\\r\n    START_PACKET() \\\r\n    STOP_PACKET()\r\n\r"],[0,"\n/* Defi"]],"start1":511,"start2":511,"length1":18,"length2":92},{"diffs":[[0,"th types. */"],[1,"\r"],[0,"\n#define PRO"]],"start1":613,"start2":613,"length1":24,"length2":25},{"diffs":[[0,"_PACKET,"],[1,"\r"],[0,"\n#define"]],"start1":656,"start2":656,"length1":16,"length2":17},{"diffs":[[0,"empty */"],[1,"\r"],[0,"\n#define"]],"start1":694,"start2":694,"length1":16,"length2":17},{"diffs":[[0,"empty */"],[-1,"\n"],[1,"\r\n\r"],[0,"\ntypedef"]],"start1":727,"start2":727,"length1":17,"length2":19},{"diffs":[[0,"um {"],[1,"\r"],[0,"\n  "],[-1,"START"],[1,"ALL"],[0,"_PACKET"],[-1,"()\n  STOP_PACKET()"],[1,"_TYPES();\r"],[0,"\n  P"]],"start1":749,"start2":749,"length1":41,"length2":32},{"diffs":[[0,"TYPE_MAX"],[1,"\r"],[0,"\n} packe"]],"start1":787,"start2":787,"length1":16,"length2":17},{"diffs":[[0,"_type_t;"],[-1,"\n"],[1,"\r\n\r"],[0,"\n#undef "]],"start1":805,"start2":805,"length1":17,"length2":19},{"diffs":[[0,"\n#undef PROLOGUE"],[1,"\r"],[0,"\n#undef FIELD\n#u"]],"start1":816,"start2":816,"length1":32,"length2":33},{"diffs":[[0,"UE\r\n#undef FIELD"],[1,"\r"],[0,"\n#undef EPILOGUE"]],"start1":830,"start2":830,"length1":32,"length2":33},{"diffs":[[0,"EPILOGUE"],[-1,"\n\n"],[1,"\r\n\r\n\r"],[0,"\n/* Defi"]],"start1":855,"start2":855,"length1":18,"length2":21},{"diffs":[[0,"ucts. */"],[1,"\r"],[0,"\n#define"]],"start1":882,"start2":882,"length1":16,"length2":17},{"diffs":[[0,"c, uc) \\"],[1,"\r"],[0,"\n  typed"]],"start1":910,"start2":910,"length1":16,"length2":17},{"diffs":[[0,"struct {"],[1,"\r\n    packet_type_t type;\r"],[0,"\n#define"]],"start1":930,"start2":930,"length1":16,"length2":42},{"diffs":[[0,"ELD(v) v"],[1,"\r"],[0,"\n#define"]],"start1":975,"start2":975,"length1":16,"length2":17},{"diffs":[[0,"t32_t field;"],[1,"\r"],[0,"\n#define STR"]],"start1":1009,"start2":1009,"length1":24,"length2":25},{"diffs":[[0,"ING(field) \\"],[1,"\r"],[0,"\n    char* f"]],"start1":1034,"start2":1034,"length1":24,"length2":25},{"diffs":[[0,"char* field;"],[1,"\r"],[0,"\n#define STR"]],"start1":1052,"start2":1052,"length1":24,"length2":25},{"diffs":[[0,"field) \\"],[1,"\r"],[0,"\n    int"]],"start1":1105,"start2":1105,"length1":16,"length2":17},{"diffs":[[0,"field; \\"],[1,"\r"],[0,"\n    cha"]],"start1":1133,"start2":1133,"length1":16,"length2":17},{"diffs":[[0,"y_field;"],[1,"\r"],[0,"\n#define"]],"start1":1158,"start2":1158,"length1":16,"length2":17},{"diffs":[[0,"c, uc) \\"],[1,"\r"],[0,"\n  } lc#"]],"start1":1186,"start2":1186,"length1":16,"length2":17},{"diffs":[[0,"t_t;"],[-1,"\n\nSTART_PACKET()\n"],[1,"\r\n\r\nALL_PACKET_TYPES()\r\n\r"],[0,"\n#un"]],"start1":1210,"start2":1210,"length1":25,"length2":33},{"diffs":[[0,"PROLOGUE"],[1,"\r"],[0,"\n#undef "]],"start1":1247,"start2":1247,"length1":16,"length2":17},{"diffs":[[0,"ef FIELD"],[1,"\r"],[0,"\n#undef "]],"start1":1261,"start2":1261,"length1":16,"length2":17},{"diffs":[[0,"f NUMBER"],[1,"\r"],[0,"\n#undef "]],"start1":1276,"start2":1276,"length1":16,"length2":17},{"diffs":[[0,"f STRING"],[1,"\r"],[0,"\n#undef "]],"start1":1291,"start2":1291,"length1":16,"length2":17},{"diffs":[[0,"ING_LIST"],[1,"\r"],[0,"\n#undef "]],"start1":1311,"start2":1311,"length1":16,"length2":17},{"diffs":[[0,"OGUE"],[-1,"\n\n\n#define PROLOGUE(lc, uc) \n  case uc##_PACKET: {\n    char* buf;\n    lc##_packet_t* packet; \n    \n    buf = malloc(sizeof *packet + header.total_size);\n    if (buf == NULL)\n      return -1;\n    \n\nstatic ssize_t parse_packet(\n\n\n/* Define"],[1,"\r\n\r\n\r\n/* Define functions to parse individual packet types */\r\n#define PROLOGUE(lc, uc) \\\r\n  int \r\n\r\n\r\n\r\n/* Define packet reading"],[0," fun"]],"start1":1332,"start2":1332,"length1":245,"length2":137},{"diffs":[[0,"tion"],[-1,"s to read a packet"],[0,". */"],[1,"\r"],[0,"\nint"]],"start1":1470,"start2":1470,"length1":30,"length2":13},{"diffs":[[0,"* packet"],[1,"_ptr"],[0,") {"],[1,"\r"],[0,"\n  char*"]],"start1":1509,"start2":1509,"length1":19,"length2":24},{"diffs":[[0,"re_data;"],[1,"\r"],[0,"\n  ssize"]],"start1":1536,"start2":1536,"length1":16,"length2":17},{"diffs":[[0,"ize_t r;"],[1,"\r\n  int result;\r\n  \r"],[0,"\n  struc"]],"start1":1550,"start2":1550,"length1":16,"length2":36},{"diffs":[[0,"cked)) {"],[1,"\r"],[0,"\n    int"]],"start1":1604,"start2":1604,"length1":16,"length2":17},{"diffs":[[0,"2_t "],[-1,"siz"],[1,"typ"],[0,"e;"],[1,"\r"],[0,"\n   "]],"start1":1622,"start2":1622,"length1":13,"length2":14},{"diffs":[[0,"int32_t "],[-1,"typ"],[1,"siz"],[0,"e;"],[1,"\r"],[0,"\n  } hea"]],"start1":1637,"start2":1637,"length1":21,"length2":22},{"diffs":[[0," header;"],[1,"\r"],[0,"\n  "],[1,"\r"],[0,"\n  r = r"]],"start1":1655,"start2":1655,"length1":19,"length2":21},{"diffs":[[0," header)"],[1,"\r"],[0,"\n  if (r"]],"start1":1707,"start2":1707,"length1":16,"length2":17},{"diffs":[[0,"\r\n  if (r < 0) {"],[1,"\r"],[0,"\n    return -1;\n"]],"start1":1715,"start2":1715,"length1":32,"length2":33},{"diffs":[[0,"\r\n    return -1;"],[1,"\r"],[0,"\n  } else if (r "]],"start1":1731,"start2":1731,"length1":32,"length2":33},{"diffs":[[0,"sizeof header) {"],[1,"\r"],[0,"\n    errno = EBA"]],"start1":1767,"start2":1767,"length1":32,"length2":33},{"diffs":[[0,"errno = EBADMSG;"],[1,"\r"],[0,"\n    return -1;\n"]],"start1":1789,"start2":1789,"length1":32,"length2":33},{"diffs":[[0," -1;"],[1,"\r"],[0,"\n  }"],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n  w"]],"start1":1817,"start2":1817,"length1":17,"length2":20},{"diffs":[[0,"eader.size);"],[1,"\r"],[0,"\n  if (wire_"]],"start1":1856,"start2":1856,"length1":24,"length2":25},{"diffs":[[0,"== NULL)"],[1,"\r"],[0,"\n    ret"]],"start1":1886,"start2":1886,"length1":16,"length2":17},{"diffs":[[0,"turn -1;"],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n  r = r"]],"start1":1902,"start2":1902,"length1":21,"length2":23},{"diffs":[[0,"der."],[-1,"total_"],[0,"size);"],[1,"\r"],[0,"\n  i"]],"start1":1951,"start2":1951,"length1":20,"length2":15},{"diffs":[[0,"r < 0) {"],[1,"\r"],[0,"\n    ret"]],"start1":1969,"start2":1969,"length1":16,"length2":17},{"diffs":[[0,"  return -1;"],[1,"\r"],[0,"\n  } else if"]],"start1":1981,"start2":1981,"length1":24,"length2":25},{"diffs":[[0,"if (r !="],[-1," sizeof"],[0," header"],[1,".size"],[0,") {"],[1,"\r"],[0,"\n    err"]],"start1":2004,"start2":2004,"length1":33,"length2":32},{"diffs":[[0,"EBADMSG;"],[1,"\r"],[0,"\n    ret"]],"start1":2041,"start2":2041,"length1":16,"length2":17},{"diffs":[[0," -1;"],[1,"\r"],[0,"\n  }"],[1,"\r"],[0,"\n  "],[1,"\r"],[0,"\n  "],[-1,"\n    \n  \n  errno = EBADMSG;\n  return -1;\n}"],[1,"switch ((packet_type_t) header.type) {\r\n\r\n#define PROLOGUE(lc, uc)                                                      \\ \r\n    case uc##_PACKET: {                                                       \\\r\n      ssize_t size = parse_##lc##_packet(wire_data, header.size, NULL);       \\\r\n      if (size < 0) {                                                         \\\r\n        result = -1;                                                          \\\r\n        break;                                                                \\\r\n      }                                                                       \\\r\n                                                                              \\\r\n      lc##_packet_t* packet = malloc(sizeof *packet);                         \\\r\n      if (packet == NULL) {                                                   \\\r\n        result = -1;                                                          \\\r\n        break;                                                                \\\r\n      }                                                                       \\\r\n                                                                              \\\r\n      size = parse_##lc##_packet(wire_data, header.size, packet);             \\\r\n      if (size < 0) {                                                         \\\r\n        result = -1;                                                          \\\r\n        break;                                                                \\\r\n      }                                                                       \\\r\n                                                                              \\\r\n      result = 0;                                                             \\\r\n      break;                                                                  \\\r\n    }\r\n#define FIELD(field) /* empty */\r\n#define EPILOGUE(lc, uc) /* empty */\r\n\r\n    ALL_PACKET_TYPES()\r\n    \r\n#undef PROLOGUE\r\n#undef FIELD\r\n#undef EPILOGUE\r\n     \r\n    default:\r\n      errno = EBADMSG;\r\n      result = -1;\r\n  }\r\n  \r\n  free(wire_data);\r\n  \r\n  return result;\r\n}\r\n\r\n\r"],[0,"\n"]],"start1":2061,"start2":2061,"length1":57,"length2":2124}]],"length":4185,"saved":false}
{"ts":1350660443302,"patch":[[{"diffs":[[0,"c) \\\r\n  "],[-1,"int"],[1,"ssize_t parse_##lc##_packet(char* wire_data, size_t size, parse_"],[0," \r\n\r\n\r\n\r"]],"start1":1421,"start2":1421,"length1":19,"length2":80}]],"length":4246,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351611953912,"patch":[[{"diffs":[[0,"ze, "],[-1,"parse_ "],[1,"char* buf) {\r\n      \r\n}"],[0,"\r\n\r\n"]],"start1":1483,"start2":1483,"length1":15,"length2":31}]],"length":4262,"saved":false}
{"ts":1351612241084,"patch":[[{"diffs":[[0," {\r\n    "],[-1,"  "],[0,"\r\n}\r\n\r\n\r"]],"start1":1497,"start2":1497,"length1":18,"length2":16}]],"length":4260,"saved":false}
{"ts":1351612326613,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[1,"    \r\n"],[0,"}\r\n\r\n\r\n\r"]],"start1":1499,"start2":1499,"length1":16,"length2":22}]],"length":4266,"saved":false}
{"ts":1351612902008,"patch":[[{"diffs":[[0,"    "],[1,"lc##_packet_t* packet;\r\n    char* field_data;\r\n    size_t wire_data_pos;\r\n    size_t field_data_pos;\r\n          \r\n    if (buf != NULL) {\r\n      packet = (lc##_packet_t*) buf;\r\n      data = (char*) (buf + 1);\r\n      packet->type = uc;\r\n    } else {\r\n      packet = NULL;\r\n      data = NULL;\r\n    }\r\n    \r\n    wire_data_pos = 0;\r\n    field_data_pos = 0;\r\n    \r\n#define FIELD(v) v\r\n\r\n#define NUMBER(field)\r\n  \r\n  \r\n  \r\n#define STRING(field)\r\n\r\n#define STRING_LIST(count_field, array_field)\r\n\r\n#define EPILOGUE(lc, uc)                                                      \\\r\n    return sizeof(*packet) + field_data_pos;                                  \\\r\n  }"],[0,"\r\n    "],[-1,"\r\n}\r\n"],[0,"\r\n\r\n"]],"start1":1501,"start2":1501,"length1":19,"length2":669}]],"length":4916,"saved":false}
{"ts":1351613577368,"patch":[[{"diffs":[[0,"ata, size_t "],[1,"wire_data_"],[0,"size, char* "]],"start1":1469,"start2":1469,"length1":24,"length2":34},{"diffs":[[0,"R(field)\r\n  "],[1,"{\r\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))\r\n      return -1;\r\n      \r\n    if (packet) {\r\n      packet->field = *(uint32_t*) (wire_data + wire_data_pos);\r\n    }\r\n    \r\n    wire_data_pos += sizeof(uint32_t);\r\n    field_data_pos += sizeof(uint32_t);\r\n  }\r\n  \r\n#define STRING(field)\r\n  {\r\n    uint32_t len;\r\n    \r\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))\r\n      return -1;\r\n    \r\n    len = *(uint32_t*) (wire_data + wire_data_pos);\r\n    field_data_pos += sizeof(uint32_t);\r\n    wire_data_pos += sizeof(uint32_t);\r\n    \r\n    if (wire_data_size < wire_data_pos + len)\r\n      return -1;\r\n      \r\n    if (field_data) {\r\n      memcpy(field_data + field_data_pos, wire_data + wire_data_pos, len);\r\n      field_data[field_data_pos + len] = '\\0';\r\n    }\r\n    \r\n    wire_data_pos += len;\r\n    field_data_pos += len + 1;\r\n  }\r\n  \r\n#define STRING_LIST(count_field, array_field) \r\n  {\r\n    \r\n  \r\n  \r\n    \r\n    \r\n    "],[0,"\r\n  \r\n  \r\n#d"]],"start1":1909,"start2":1909,"length1":24,"length2":959}]],"length":5861,"saved":false}
{"ts":1351614034374,"patch":[[{"diffs":[[0,"eld) \r\n  {\r\n"],[1,"    int32_t i;\r\n    size_t array_size;\r\n    NUMBER(count_field)\r\n        \r\n    /* Allocate space for the array, and an additional NULL. */\r\n    \r\n        \r\n"],[0,"    \r\n  \r\n  "]],"start1":2814,"start2":2814,"length1":24,"length2":180}]],"length":6017,"saved":false}
{"ts":1351614036449,"patch":[[{"diffs":[[0,"LL. */\r\n"],[1,"    array_size = sizeof(char*) \r\n"],[0,"    \r\n  "]],"start1":2958,"start2":2958,"length1":16,"length2":49}]],"length":6050,"saved":false}
{"ts":1351615725911,"patch":[[{"diffs":[[0,"(packet)"],[-1," {"],[0,""],[1,""],[0,"\r\n      "]],"start1":2016,"start2":2016,"length1":18,"length2":16},{"diffs":[[0,"_pos);\r\n"],[-1,"    }\r\n    \r\n"],[0,"    wire"]],"start1":2083,"start2":2083,"length1":29,"length2":16},{"diffs":[[0,");\r\n"],[-1,"    field_data_pos += sizeof(uint32_t);\r\n"],[0,"  }\r"]],"start1":2127,"start2":2127,"length1":49,"length2":8},{"diffs":[[0,"nt32_t i"],[-1,""],[0,""],[1,", count"],[0,";\r\n    s"]],"start1":2775,"start2":2775,"length1":16,"length2":23},{"diffs":[[0,"    "],[-1,"/* Allocate space for the array, and an additional NULL. */\r\n    array_size = sizeof(char*)"],[1,"if (wire_data_size < wire_data_pos + sizeof(int32_t))\r\n      return -1;\r\n    \r\n    count = *(uint32_t*) (wire_data + wire_data_pos);\r\n    \r\n    if (packet != NULL)\r\n      packet->count_field = count; \r\n    \r\n    wire_data_pos += sizeof(uint32_t);\r\n    \r\n    /* Allocate space for the array, and an additional NULL. */\r\n    array_size = sizeof(char*) * (count + 1);\r\n    \r\n    if (packet) {\r\n      packet->array_field = (char**) field_data + field_data_pos;\r\n      packet->array_field[count] = NULL;\r\n    } \r\n      \r\n    field_data_pos += array_size;\r\n    \r\n    \r\n   "],[0," \r\n "]],"start1":2852,"start2":2852,"length1":99,"length2":574}]],"length":6476,"saved":false}
{"ts":1351616165972,"patch":[[{"diffs":[[0,"\r\n    } "],[1,"else {\r\n      array =- NULL;\r\n    }"],[0,"\r\n      "]],"start1":3354,"start2":3354,"length1":16,"length2":51},{"diffs":[[0,"    \r\n    \r\n"],[-1,"    \r\n    \r\n"],[0,"        \r\n  "]],"start1":3442,"start2":3442,"length1":36,"length2":24}]],"length":6499,"saved":false}
{"ts":1351616614126,"patch":[[{"diffs":[[0,"e;\r\n"],[-1,"    NUMBER(count_field)\r\n"],[0,"    "]],"start1":2813,"start2":2813,"length1":33,"length2":8},{"diffs":[[0,"  } "],[-1,"else {\r\n      array =- NULL;\r\n    }"],[0,"\r\n"],[1,""],[0,"    "]],"start1":3333,"start2":3333,"length1":45,"length2":10},{"diffs":[[0,"    "],[-1,"\r\n        \r\n    \r\n  \r\n  \r\n    \r\n    \r\n    \r\n  \r\n  \r\n#define STRING(field)\r\n\r\n#define STRING_LIST(count_field, array_field)"],[1,"for (i = 0; i < count; i++) {\r\n      FIELD(STRING((packet)->(array_field)[i])\r\n    }\r\n  }\r\n    "],[0,"\r\n\r\n"]],"start1":3388,"start2":3388,"length1":130,"length2":103}]],"length":6412,"saved":false}
{"ts":1351617108578,"patch":[[{"diffs":[[0,"ART) \\\r\n    "],[-1,"FIELD("],[0,"STRING(tag))"]],"start1":118,"start2":118,"length1":30,"length2":24},{"diffs":[[0,"ING(tag)"],[-1,")"],[0," \\\r\n    "],[-1,"FIELD("],[0,"STRING(f"]],"start1":133,"start2":133,"length1":31,"length2":24},{"diffs":[[0,"NG(filename)"],[-1,")"],[0," \\\r\n    "],[-1,"FIELD("],[0,"STRING(cwd))"]],"start1":153,"start2":153,"length1":39,"length2":32},{"diffs":[[0," STRING(cwd)"],[-1,")"],[0," \\\r\n    "],[-1,"FIELD("],[0,"STRING_LIST("]],"start1":172,"start2":172,"length1":39,"length2":32},{"diffs":[[0,"(argc, argv)"],[-1,")"],[0," \\\r\n    "],[-1,"FIELD("],[0,"STRING_LIST("]],"start1":203,"start2":203,"length1":39,"length2":32},{"diffs":[[0,"LIST(envc, envv)"],[-1,")"],[0," \\\r\n  EPILOGUE(s"]],"start1":230,"start2":230,"length1":33,"length2":32},{"diffs":[[0,"TOP) \\\r\n    "],[-1,"FIELD("],[0,"STRING(filen"]],"start1":321,"start2":321,"length1":30,"length2":24},{"diffs":[[0,"ilename)"],[-1,")"],[0," \\\r\n    "],[-1,"FIELD("],[0,"STRING(c"]],"start1":341,"start2":341,"length1":31,"length2":24},{"diffs":[[0,"ING(cwd)"],[-1,")"],[0," \\\r\n    "],[-1,"FIELD("],[0,"STRING_L"]],"start1":360,"start2":360,"length1":31,"length2":24},{"diffs":[[0,"rgv)"],[-1,")"],[0," \\\r\n    "],[-1,"FIELD("],[0,"STRI"]],"start1":395,"start2":395,"length1":23,"length2":16},{"diffs":[[0,"c, envv)"],[-1,")"],[0," \\\r\n  EP"]],"start1":422,"start2":422,"length1":17,"length2":16},{"diffs":[[0," */\r"],[-1,"\n#define FIELD(name) /* empty */\r"],[0,"\n\r\nt"]],"start1":636,"start2":636,"length1":41,"length2":8},{"diffs":[[0,"f PROLOGUE\r\n"],[-1,"#undef FIELD\r\n"],[0,"#undef EPILO"]],"start1":726,"start2":726,"length1":38,"length2":24},{"diffs":[[0," type;\r\n"],[-1,"#define FIELD(v) v\r\n"],[0,"#define "]],"start1":847,"start2":847,"length1":36,"length2":16},{"diffs":[[0,"f PROLOGUE\r\n"],[-1,"#undef FIELD\r\n"],[0,"#undef NUMBE"]],"start1":1115,"start2":1115,"length1":38,"length2":24},{"diffs":[[0,"types */"],[1,"                       \\"],[0,"\r\n#defin"]],"start1":1245,"start2":1245,"length1":16,"length2":40},{"diffs":[[0,"UE(lc, uc) \\"],[1,"                                                    \\"],[0,"\r\n  ssize_t "]],"start1":1293,"start2":1293,"length1":24,"length2":77},{"diffs":[[0,"ze, "],[-1,"char* buf) {\r\n    lc##_packet_t* packet;\r\n    char* field_data;\r\n    size_t wire_data_pos;\r\n    size_t field_data_pos;\r\n          \r\n    if (buf != NULL) {\r\n      packet = (lc##_packet_t*) buf;\r\n      data = (char*) (buf + 1);\r\n      packet->type = uc;\r\n    } else {\r\n      packet = NULL;\r\n      data = NULL;\r\n    }\r\n    \r\n    wire_data_pos = 0;\r\n    field_data_pos = 0;\r\n    \r\n#define FIELD(v) v\r\n\r\n#define NUMBER(field)\r\n  {\r\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))\r\n      return -1;\r\n      \r\n    if (packet)"],[1,"        \\\r\n      char* buf) {                                                            \\\r\n    lc##_packet_t* packet;                                                    \\\r\n    char* field_data;                                                         \\\r\n    size_t wire_data_pos;                                                     \\\r\n    size_t field_data_pos;                                                    \\\r\n                                                                              \\\r\n    if (buf != NULL) {                                                        \\\r\n      packet = (lc##_packet_t*) buf;                                          \\\r\n      data = (char*) (buf + 1);                                               \\\r\n      packet->type = uc;                                                      \\\r\n    } else {                                                                  \\\r\n      packet = NULL;                                                          \\\r\n      data = NULL;                                                            \\\r\n    }                                                                         \\\r\n                                                                              \\\r\n    wire_data_pos = 0;                                                        \\\r\n    field_data_pos = 0;                                                       \r\n#define NUMBER(field)\r\n  {                                                                           \\\r\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))                     \\\r\n      return -1;                                                              \\\r\n                                                                              \\\r\n    if (packet)                                                               \\"],[0,"\r\n  "]],"start1":1426,"start2":1426,"length1":535,"length2":1821},{"diffs":[[0,"e_data_pos);"],[1,"               \\"],[0,"\r\n    wire_d"]],"start1":3296,"start2":3296,"length1":24,"length2":40},{"diffs":[[0,"_t);"],[-1,"\r\n  }\r\n  \r\n#define STRING(field)\r\n  {\r\n    uint32_t len;\r\n    \r\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))\r\n      return -1;\r\n    "],[1,"                                        \\\r\n  }                                                                           \\\r\n#define STRING(field)                                                         \\\r\n  {                                                                           \\\r\n    uint32_t len;                                                             \\\r\n                                                                              \\\r\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))                     \\\r\n      return -1;                                                              \\\r\n                                                                              \\"],[0,"\r\n  "]],"start1":3360,"start2":3360,"length1":153,"length2":697},{"diffs":[[0,"e_data_pos);"],[1,"                           \\"],[0,"\r\n    field_"]],"start1":4094,"start2":4094,"length1":24,"length2":52},{"diffs":[[0,"_t);"],[-1,"\r\n    wire_data_pos += sizeof(uint32_t);\r\n    \r\n    if (wire_data_size < wire_data_pos + len)\r\n      return -1;\r\n      \r\n    if (field_data) {"],[1,"                                       \\\r\n    wire_data_pos += sizeof(uint32_t);                                        \\\r\n                                                                              \\\r\n    if (wire_data_size < wire_data_pos + len)                                 \\\r\n      return -1;                                                              \\\r\n                                                                              \\\r\n    if (field_data) {                                                         \\"],[0,"\r\n  "]],"start1":4171,"start2":4171,"length1":150,"length2":534},{"diffs":[[0,"s, len);"],[1,"    \\"],[0,"\r\n      "]],"start1":4769,"start2":4769,"length1":16,"length2":21},{"diffs":[[0,"\\0';"],[-1,"\r\n    }\r\n    \r\n    wire_data_pos += len;\r\n    field_data_pos += len + 1;\r\n  }"],[1,"                                \\\r\n    }                                                                         \\\r\n                                                                              \\\r\n    wire_data_pos += len;                                                     \\\r\n    field_data_pos += len + 1;                                                \\"],[0,"\r\n  "],[1,"}"],[0,"\r\n#d"]],"start1":4826,"start2":4826,"length1":89,"length2":370},{"diffs":[[0,"\n  {"],[-1,"\r\n    int32_t i, count;\r\n    size_t array_size;\r\n        \r\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))\r\n      return -1;\r\n    "],[1,"                                                                           \\\r\n    int32_t i, count;                                                         \\\r\n    size_t array_size;                                                        \\\r\n                                                                              \\\r\n    if (wire_data_size < wire_data_pos + sizeof(int32_t))                     \\\r\n      return -1;                                                              \\\r\n                                                                              \\"],[0,"\r\n  "]],"start1":5241,"start2":5241,"length1":148,"length2":570},{"diffs":[[0,"os);"],[1,"                         \\"],[0,"\r\n    "],[1," "],[-1,"\r\n    if (packet != NULL)\r\n      packet->count_field = count; \r\n    \r\n    wire_data_pos += sizeof(uint32_t);\r\n    "],[1,"                                                                         \\\r\n    if (packet != NULL)                                                       \\\r\n      packet->count_field = count;                                            \\\r\n                                                                              \\\r\n    wire_data_pos += sizeof(uint32_t);                                        \\\r\n                                                                              \\"],[0,"\r\n  "]],"start1":5858,"start2":5858,"length1":128,"length2":520},{"diffs":[[0,"NULL. */"],[1,"               \\"],[0,"\r\n    ar"]],"start1":6431,"start2":6431,"length1":16,"length2":32},{"diffs":[[0," 1);"],[-1,"\r\n    \r\n    if (packet) {"],[1,"                                 \\\r\n                                                                              \\\r\n    if (packet) {                                                             \\"],[0,"\r\n  "]],"start1":6498,"start2":6498,"length1":33,"length2":204},{"diffs":[[0,"ata_pos;"],[1,"             \\"],[0,"\r\n      "]],"start1":6757,"start2":6757,"length1":16,"length2":30},{"diffs":[[0,"ULL;"],[-1,"\r\n    } \r\n      \r\n    field_data_pos += array_size;\r\n    \r\n    for (i = 0; i < count; i++) {"],[1,"                                      \\\r\n    }                                                                         \\\r\n                                                                              \\\r\n    field_data_pos += array_size;                                             \\\r\n                                                                              \\\r\n    for (i = 0; i < count; i++) {                                             \\"],[0,"\r\n      "],[-1,"FIELD("],[0,"STRI"]],"start1":6817,"start2":6817,"length1":114,"length2":460},{"diffs":[[0,")[i]"],[-1,")\r\n    }\r\n  }\r\n    \r\n"],[1,"                                       \\\r\n    }                                                                         \\\r\n  }"],[0,"\r\n#d"]],"start1":7302,"start2":7302,"length1":29,"length2":134},{"diffs":[[0,"  }\r\n   "],[-1," "],[1,"\r\nALL_PACKET_TYPES();\r\n\r\n#undef PROLOGUE\r\n#undef NUMBER\r\n#undef STRING\r\n#undef STRING_LIST\r\n#undef EPILOGUE"],[0,"\r\n\r\n\r\n/*"]],"start1":7596,"start2":7596,"length1":17,"length2":123},{"diffs":[[0," }\r\n"],[-1,"#define FIELD(field) /* empty */\r\n"],[0,"#def"]],"start1":10182,"start2":10182,"length1":42,"length2":8},{"diffs":[[0,"OGUE"],[-1,"\r\n#undef FIELD"],[0,""],[1,""],[0,"\r\n#u"]],"start1":10267,"start2":10267,"length1":22,"length2":8}]],"length":10413,"saved":false}
{"ts":1351617459297,"patch":[[{"diffs":[[0,"_TYPES()"],[-1,";"],[0,"\r\n  PACK"]],"start1":671,"start2":671,"length1":17,"length2":16}]],"length":10412,"saved":false}
{"ts":1351617494379,"patch":[[{"diffs":[[0,"       \\"],[-1," "],[0,"\r\n    ca"]],"start1":8466,"start2":8466,"length1":17,"length2":16}]],"length":10411,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351617637073,"patch":[[{"diffs":[[0," \\\r\n    "],[1,"COPY("],[0,"START_PA"]],"start1":486,"start2":486,"length1":16,"length2":21},{"diffs":[[0,"PACKET()"],[1,")"],[0," \\\r\n    "],[1,"COPY("],[0,"STOP_PAC"]],"start1":505,"start2":505,"length1":24,"length2":30},{"diffs":[[0,"PACKET()"],[1,")\r\n\r\n#define COPY(v) v"],[0,"\r\n\r\n/* D"]],"start1":532,"start2":532,"length1":16,"length2":38}]],"length":10444,"saved":false}
{"ts":1351617769431,"patch":[[{"diffs":[[0,"l.h\"\r\n\r\n"],[1,"#define NEST(v) v\r\n"],[0,"\r\n#defin"]],"start1":62,"start2":62,"length1":16,"length2":35},{"diffs":[[0,"ART) \\\r\n    "],[1,"NEST("],[0,"STRING(tag) "]],"start1":137,"start2":137,"length1":24,"length2":29},{"diffs":[[0,"ING(tag)"],[1,")"],[0," \\\r\n    "]],"start1":157,"start2":157,"length1":16,"length2":17},{"diffs":[[0,"\r\n\r\n"],[-1,"#define COPY(v) v\r\n\r\n"],[0,"/* D"]],"start1":566,"start2":566,"length1":29,"length2":8}]],"length":10448,"saved":false}
{"ts":1351617801542,"patch":[[{"diffs":[[0," \\\r\n    "],[-1,"COPY("],[0,"START_PA"]],"start1":511,"start2":511,"length1":21,"length2":16},{"diffs":[[0,"ET()"],[-1,")"],[0," \\\r\n    "],[-1,"COPY("],[0,"STOP"]],"start1":529,"start2":529,"length1":22,"length2":16},{"diffs":[[0,"PACKET()"],[-1,")"],[0,"\r\n\r\n/* D"]],"start1":546,"start2":546,"length1":17,"length2":16}]],"length":10436,"saved":false}
{"ts":1351617867309,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"#define NEST(v) v\r\n\r\n"],[0,"#def"]],"start1":66,"start2":66,"length1":29,"length2":8},{"diffs":[[0,"    "],[-1,"NEST("],[0,"STRI"]],"start1":124,"start2":124,"length1":13,"length2":8},{"diffs":[[0,"ING(tag)"],[-1,")"],[0," \\\r\n    "]],"start1":131,"start2":131,"length1":17,"length2":16}]],"length":10409,"saved":false}
{"ts":1351617889415,"patch":[[{"diffs":[[0,"R(field)"],[1,"                                                         \\"],[0,"\r\n  {   "]],"start1":2827,"start2":2827,"length1":16,"length2":74},{"diffs":[[0,"\n  }"],[-1,"                                                                           \\"],[0,"\r\n#d"]],"start1":3461,"start2":3461,"length1":84,"length2":8},{"diffs":[[0,"_field) "],[1,"                                \\"],[0,"\r\n  {   "]],"start1":5211,"start2":5211,"length1":16,"length2":49}]],"length":10424,"saved":false}
{"ts":1351617893812,"patch":[[{"diffs":[[0,"s */"],[-1,"                       \\"],[0,"\r\n#d"]],"start1":1246,"start2":1246,"length1":32,"length2":8}]],"length":10400,"saved":false}
{"ts":1351617944718,"patch":[[{"diffs":[[0,"ield)[i]"],[-1," "],[1,")"],[0,"        "]],"start1":7286,"start2":7286,"length1":17,"length2":17}]],"length":10400,"saved":false}
{"ts":1351618079609,"patch":[[{"diffs":[[0,"  \\\r\n    }\r\n"],[1,"#define NUMBER(field) /* empty */\r\n#define STRING(field) /* empty */\r\n#define STRING_LIST(count_field, array_field) /* empty */\r\n"],[0,"#define EPIL"]],"start1":10161,"start2":10161,"length1":24,"length2":153},{"diffs":[[0,"undef PROLOGUE\r\n"],[1,"#undef NUMBER\r\n#undef STRING\r\n#undef STRING_LIST\r\n"],[0,"#undef EPILOGUE\r"]],"start1":10373,"start2":10373,"length1":32,"length2":82}]],"length":10579,"saved":false}
{"ts":1351618152013,"patch":[[{"diffs":[[0,"R(field)"],[1," \\\r\n   "],[0," int32_t"]],"start1":865,"start2":865,"length1":16,"length2":23}]],"length":10586,"saved":false}
{"ts":1351618176971,"patch":[[{"diffs":[[0,"ACKET,\r\n"],[1,"#define NUMBER(field) /* empty */\r\n#define STRING(field) /* empty */\r\n#define STRING_LIST(field) /* empty */\r\n"],[0,"#define "]],"start1":593,"start2":593,"length1":16,"length2":126},{"diffs":[[0,"f PROLOGUE\r\n"],[1,"#undef NUMBER\r\n#undef STRING\r\n#undef STRING_LIST\r\n"],[0,"#undef EPILO"]],"start1":833,"start2":833,"length1":24,"length2":74}]],"length":10746,"saved":false}
{"ts":1351618185379,"patch":[[{"diffs":[[0,"NG_LIST("],[1,"count_field, array_"],[0,"field) /"]],"start1":683,"start2":683,"length1":16,"length2":35}]],"length":10765,"saved":false}
{"ts":1351618256001,"patch":[[{"diffs":[[0,"dint.h>\r"],[1,"\n#include <stdlib.h>\r"],[0,"\n\r\n#incl"]],"start1":36,"start2":36,"length1":16,"length2":37}]],"length":10786,"saved":false}
{"ts":1351618313488,"patch":[[{"diffs":[[0,"   \\\r\n      "],[1,"field_"],[0,"data = (char"]],"start1":2263,"start2":2263,"length1":24,"length2":30},{"diffs":[[0,") (buf + 1);"],[-1,"      "],[0,"            "]],"start1":2294,"start2":2294,"length1":30,"length2":24}]],"length":10786,"saved":false}
{"ts":1351618346137,"patch":[[{"diffs":[[0,"lc, uc) "],[-1,"\\"],[1," "],[0,"        "]],"start1":1476,"start2":1476,"length1":17,"length2":17}]],"length":10786,"saved":false}
{"ts":1351618449756,"patch":[[{"diffs":[[0,"uc) "],[-1,"\\\r\n  typedef struct {\r\n    packet_type_t type;\r\n#define NUMBER(field) \\\r\n    int32_t field;\r\n#define STRING(field) \\\r\n    char* field;\r\n#define STRING_LIST(count_field, array_field) \\\r\n    int32_t count_field; \\\r\n    char** array_field;\r\n#define EPILOGUE(lc, uc)"],[1,"                                                     \\\r\n  typedef struct {                                                            \\\r\n    packet_type_t type;\r\n#define NUMBER(field)                                                         \\\r\n    int32_t field;\r\n#define STRING(field)                                                         \\\r\n    char* field;\r\n#define STRING_LIST(count_field, array_field)                                 \\\r\n    int32_t count_field;                                                      \\\r\n    char** array_field;\r\n#define EPILOGUE(lc, uc)                                                     "],[0," \\\r\n"]],"start1":1000,"start2":1000,"length1":270,"length2":634}]],"length":11150,"saved":false}
{"ts":1351618521843,"patch":[[{"diffs":[[0,"dlib.h>\r"],[1,"\n#include <string.h>\r"],[0,"\n\r\n#incl"]],"start1":57,"start2":57,"length1":16,"length2":37}]],"length":11171,"saved":false}
{"ts":1351618551947,"patch":[[{"diffs":[[0,"ype = uc"],[-1,";         "],[1,"##_PACKET;"],[0,"        "]],"start1":2750,"start2":2750,"length1":26,"length2":26}]],"length":11171,"saved":false}
{"ts":1351618573038,"patch":[[{"diffs":[[0,"\r\n      "],[1,"field_"],[0,"data = N"]],"start1":2976,"start2":2976,"length1":16,"length2":22},{"diffs":[[0,"eld_data = NULL;"],[-1,"      "],[0,"                "]],"start1":2986,"start2":2986,"length1":38,"length2":32}]],"length":11171,"saved":false}
{"ts":1351618609965,"patch":[[{"diffs":[[0,"\r\n  \r\n  "],[-1,"struct "],[0,"__attrib"]],"start1":8429,"start2":8429,"length1":23,"length2":16},{"diffs":[[0,"packed))"],[1," struct"],[0," {\r\n    "]],"start1":8451,"start2":8451,"length1":16,"length2":23}]],"length":11171,"saved":false}
{"ts":1351618629661,"patch":[[{"diffs":[[0,"e__("],[-1,"("],[0,"packed)"],[-1,")"],[0," str"]],"start1":8446,"start2":8446,"length1":17,"length2":15}]],"length":11169,"saved":false}
{"ts":1351618638945,"patch":[[{"diffs":[[0,"e__("],[1,"("],[0,"packed)"],[1,")"],[0," str"]],"start1":8446,"start2":8446,"length1":15,"length2":17}]],"length":11171,"saved":false}
{"ts":1351618649873,"patch":[[{"diffs":[[0,"t;\r\n  \r\n"],[1,"  struct {\r\n  "],[0,"  __attr"]],"start1":8427,"start2":8427,"length1":16,"length2":30},{"diffs":[[0,"packed))"],[-1," struct {\r\n   "],[0," int32_t"]],"start1":8465,"start2":8465,"length1":30,"length2":16},{"diffs":[[0,"t type;\r\n   "],[1," __attribue__((packed))"],[0," int32_t siz"]],"start1":8480,"start2":8480,"length1":24,"length2":47}]],"length":11194,"saved":false}
{"ts":1351618662733,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"  struct {\r\n  "],[0,"  __"]],"start1":8431,"start2":8431,"length1":22,"length2":8},{"diffs":[[0,"ibue__((packed))"],[1," struct {\r\n   "],[0," int32_t type;\r\n"]],"start1":8443,"start2":8443,"length1":32,"length2":46},{"diffs":[[0,"pe;\r\n   "],[-1," __attribue__((packed))"],[0," int32_t"]],"start1":8484,"start2":8484,"length1":39,"length2":16}]],"length":11171,"saved":false}
{"ts":1351618714975,"patch":[[{"diffs":[[0," \r\n "],[-1," __attribue__((packed))"],[0," str"]],"start1":8432,"start2":8432,"length1":31,"length2":8},{"diffs":[[0,"e;\r\n  } "],[1,"__attribue__((packed))"],[0,"header;\r"]],"start1":8481,"start2":8481,"length1":16,"length2":38}]],"length":11170,"saved":false}
{"ts":1351618717266,"patch":[[{"diffs":[[0,"packed))"],[1," "],[0,"header;\r"]],"start1":8503,"start2":8503,"length1":16,"length2":17}]],"length":11171,"saved":false}
{"ts":1351618732509,"patch":[[{"diffs":[[0,"_attribu"],[1,"t"],[0,"e__((pac"]],"start1":8490,"start2":8490,"length1":16,"length2":17}]],"length":11172,"saved":false}
{"ts":1351618772903,"patch":[[{"diffs":[[0,"d, &"],[-1,"total_size"],[1,"header"],[0,", si"]],"start1":8542,"start2":8542,"length1":18,"length2":14}]],"length":11168,"saved":false}
{"ts":1351618784593,"patch":[[{"diffs":[[0," header)"],[1,";"],[0,"\r\n  if ("]],"start1":8560,"start2":8560,"length1":16,"length2":17}]],"length":11169,"saved":false}
{"ts":1351618911313,"patch":[[{"diffs":[[0,"    "],[-1,"char* buf) {            "],[1,"lc##_packet_t* packet) {"],[0,"    "]],"start1":2008,"start2":2008,"length1":32,"length2":32},{"diffs":[[0,"    if ("],[-1,"buf"],[1,"packet"],[0," != NULL"]],"start1":2492,"start2":2492,"length1":19,"length2":22},{"diffs":[[0,"    "],[-1,"                                             \\\r\n      packet = (lc##_packet_t*) buf;"],[0,"    "]],"start1":2524,"start2":2524,"length1":92,"length2":8},{"diffs":[[0,"*) ("],[-1,"buf"],[1,"packet"],[0," + 1);"],[-1,"   "],[0,"    "]],"start1":2597,"start2":2597,"length1":20,"length2":20},{"diffs":[[0," \\\r\n"],[-1,"      packet = NULL;                                                          \\\r\n"],[0,"    "]],"start1":2812,"start2":2812,"length1":89,"length2":8},{"diffs":[[0,"size"],[-1,"of *packet);"],[1,");          "],[0,"    "]],"start1":9497,"start2":9497,"length1":20,"length2":20}]],"length":11007,"saved":false}
{"ts":1351618922752,"patch":[[{"diffs":[[0," \\\r\n"],[-1,"    lc##_packet_t* packet;                                                    \\\r\n"],[0,"    "]],"start1":2083,"start2":2083,"length1":89,"length2":8}]],"length":10926,"saved":false}
{"ts":1351619000811,"patch":[[{"diffs":[[0,"outil.h\"\r\n\r\n"],[1,"\r\n"],[0,"#define STAR"]],"start1":100,"start2":100,"length1":24,"length2":26}]],"length":10928,"saved":false}
